(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{671:function(s,t,e){"use strict";e.r(t);var n=e(8),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"_1-url带布尔类型参数获取异常"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-url带布尔类型参数获取异常"}},[s._v("#")]),s._v(" 1 URL带"),e("strong",[s._v("布尔")]),s._v("类型参数获取异常")]),s._v(" "),e("p",[e("strong",[s._v("背景：")])]),s._v(" "),e("p",[s._v("Vue可以通过 this.$router.query.xx获取url上携带参数，例如：")]),s._v(" "),e("p",[s._v("URL：http://itart.cn/?edit=true")]),s._v(" "),e("p",[s._v("要获取edit参数值时可以通过：this.$router.query.edit获取。")]),s._v(" "),e("p",[s._v("但是，在Chrome浏览器测试发现不同跳转方式获取到的"),e("strong",[s._v("类型不一样")]),s._v("，有的获取到的是"),e("strong",[s._v("string类型")]),s._v("，有的是"),e("strong",[s._v("boolean类型")]),s._v("，例如：")]),s._v(" "),e("ol",[e("li",[s._v("如果直接在浏览器输入http://itart.cn?edit=true进入页面时，通过this.$router.query.edit获取到的edit类型是"),e("strong",[s._v("string")]),s._v("类型")]),s._v(" "),e("li",[s._v("如果是通过Vue路由打开方式跳转过来的：$router.push({path: '/', query: { edit: true }})，获取到的edit类型就是"),e("strong",[s._v("boolean")]),s._v("值")])]),s._v(" "),e("p",[s._v("这两种跳转方式在浏览器上地址栏显示的"),e("strong",[s._v("url都是一样")]),s._v("，但是获取到的值类型不一样，不注意的话会导致判断错误。")]),s._v(" "),e("p",[e("strong",[s._v("有可能的场景是")]),s._v("：用router.push进入页面都正常，但是，手动刷新页面时就出现参数类型异常的问题。")]),s._v(" "),e("p",[e("strong",[s._v("建议：")])]),s._v(" "),e("p",[s._v("可以创建一个工具类来统一处理获取url参数")]),s._v(" "),e("p",[e("strong",[s._v("utils/index.js")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("export function parseBoolean(value) {\n  switch(typeofvalue) {\n    case'undefined':\n      return false\n    case'boolean':\n      return value\n    case 'string': {\n      retur nvalue === 'true'\n    }\n    default: {\n      throwError('该类型不能转化为Boolean类型：', value)\n      }\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("如果有"),e("strong",[s._v("多个地方")]),s._v("需要使用这个参数，尽量在vue"),e("strong",[s._v("一开始实例化")]),s._v("的时候就把query上的值设置到"),e("strong",[s._v("data对象里")]),s._v("，使用的时候就"),e("strong",[s._v("直接使用data对象里的值")]),s._v("，减少重复类型判断转化，例如：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import { parseBoolean } from '@/utils'\nexport default {\n  data() {\n    return {\n    edit: parseBoolean(this.$route.query.edit)\n    }\n  },\n  methods: {\n    submit() {\n      console.log(this.edit)\n    }\n  }\n  ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h1",{attrs:{id:"_2-组件复用导致created不会执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件复用导致created不会执行"}},[s._v("#")]),s._v(" 2 组件复用导致created不会执行")]),s._v(" "),e("p",[s._v("组件中包含一个"),e("strong",[s._v("属性key")]),s._v("，作为组件复用标识，如果if .. else if .. else 中的组件都"),e("strong",[s._v("没定义key")]),s._v("可能会以为组件复用导致事件错乱，例如：")]),s._v(" "),e("p",[s._v('<el-button v-if ="c===1" @click="click1"></el-button>')]),s._v(" "),e("p",[s._v('<el-button v-else @click="click2"></el-button>')]),s._v(" "),e("p",[s._v("当c=1是会显示第一个按钮，点击事件会调用click1方法，当c不等于1时， 实际上显示的是第二个按钮，但是事件"),e("strong",[s._v("可能还是click1")]),s._v("，原因两个按钮都没有定义key，所以vue会"),e("strong",[s._v("智能组件复用")]),s._v("，导致奇怪的异常，for循环里要定义唯一key也是基于这种考虑。")]),s._v(" "),e("p",[e("strong",[s._v("建议")])]),s._v(" "),e("p",[s._v("如果没有明显性能问题，可以对一些v-if else组件定义一个唯一的key来防止组件复用，解决"),e("strong",[s._v("created")]),s._v("方法不能调用和data数据在条件切换的时候"),e("strong",[s._v("没有重置")]),s._v("的问题")])])}),[],!1,null,null,null);t.default=r.exports}}]);