(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{656:function(e,s,t){"use strict";t.r(s);var r=t(8),n=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("最近线上用户请求时不时返回502，并且没多大规律，我们的部署架构是****Nginx + web*"),t("em",[t("strong",[e._v("应用，nginx中的upstream配置了")]),e._v("两个web")]),e._v("*做负载均衡。")]),e._v(" "),t("p",[e._v("经过分析web应用，出现502的时候请求****并没有到达web应用****，所以可以断定请求502是Nginx直接返回，查看Nginx的access.log可以查到对应的请求信息，确实返回502")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('GET /api/app/1 HTTP/1.1" 502 541 17.340 \n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Nginx 的error.log日志相关异常：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream server temporarily disabled while reading response header from upstream, client..\nno live upstreams while connecting to upstream, client..\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("可以看到，是因为"),t("strong",[e._v("upstream server无效")]),e._v("了，没有可用的web应用导致，看到这个异常时，第一个反应是难不成两台web会都挂了？？？")]),e._v(" "),t("p",[e._v("但是查看web的****运行日志*"),t("em",[t("strong",[e._v("和服务状态")]),e._v("service xx status")]),e._v("*，当出现502时，web应用的运行都是正常的，并没有重启或是宕机，所以排除web应用问题，那会不会是之前有其他异常导致这个502！？继续分析了出现502之前的日志，果然，在502之前都有一个"),t("strong",[e._v("500异常")]),e._v("，并且这个异常"),t("strong",[e._v("很有频率")]),e._v("的出现。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('"GET /api/project HTTP/1.1" 500 214 0.087 "http://xx.com/" "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36" "-" "-" xxx.net "10.x.x.x:8081, 10.x.x.x:8081" "500, 500" "0.045, 0.042"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("通过url分析发现，这个是因为页面有一个"),t("strong",[e._v("定时任务")]),e._v("，会十秒刷新一次，而这个api正好因为有"),t("strong",[e._v("bug")]),e._v("，请求会返回500，不过有点想不通的是500为什么会导致后续"),t("strong",[e._v("正常请求")]),e._v("出现502，后来通过分析nginx的nginx.conf，原来nginx配置了"),t("strong",[e._v("proxy_next_upstream")]),e._v("属性，这个属性作用是如果发现请求返回的是"),t("strong",[e._v("后面的配置状态")]),e._v("时就会转发到下一个upstream，例如：500")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location / {\n      proxy_pass         http://app-proxy;\n      proxy_next_upstream error timeout http_500 http_502 http_503 http_504;\n      proxy_next_upstream_tries 3;\n      proxy_connect_timeout 60s;\n      proxy_read_timeout 60s;\n      proxy_send_timeout 60s;\n      proxy_pass_request_headers      on;\n      proxy_set_header   Host             $host:$server_port;\n      proxy_set_header   X-Real-IP        $remote_addr;\n      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n      set $domain default;\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("p",[e._v("结果测试发现，如果每个实例都返回500后，接下来的请求就会出现502，如果访问正常的api，又会恢复正常，说明nginx当发现upstream都为500的时候，就会"),t("strong",[e._v("临时disable所有upstream")]),e._v("，也就是上面error.log上出现的“"),t("strong",[e._v("upstream server temporarily disabled")]),e._v("”，后续请求就会有“****no live upstreams****”问题，但是出现502后，新请求会重新检测，当请求是200，就会恢复正常。")]),e._v(" "),t("p",[e._v("解决：问题原因找到了，解决办法也就简单了，这个500一般是服务器端的"),t("strong",[e._v("bug")]),e._v("，一般请求都不会直接返回500，出现问题及时解决就好，另外这个使用这个属性时得注意，如果请求是后面枚举的状态时，nginx会"),t("strong",[e._v("直接")]),e._v("转到另外一个upstream，所以会出现"),t("strong",[e._v("多个实例都接收到请求")]),e._v("的情况，有些情况下是不允许的，所以使用的时候需要分析一下。")])])}),[],!1,null,null,null);s.default=n.exports}}]);